!function(t,o){"object"==typeof exports&&"object"==typeof module?module.exports=o():"function"==typeof define&&define.amd?define([],o):"object"==typeof exports?exports.reactLifecyclesCompat=o():t.reactLifecyclesCompat=o()}(this,function(){return function(t){function o(n){if(e[n])return e[n].exports;var r=e[n]={i:n,l:!1,exports:{}};return t[n].call(r.exports,r,r.exports,o),r.l=!0,r.exports}var e={};return o.m=t,o.c=e,o.i=function(t){return t},o.d=function(t,e,n){o.o(t,e)||Object.defineProperty(t,e,{configurable:!1,enumerable:!0,get:n})},o.n=function(t){var e=t&&t.__esModule?function(){return t.default}:function(){return t};return o.d(e,"a",e),e},o.o=function(t,o){return Object.prototype.hasOwnProperty.call(t,o)},o.p="",o(o.s=0)}([function(t,o,e){"use strict";function n(){var t=this.constructor.getDerivedStateFromProps(this.props,this.state);null!==t&&void 0!==t&&this.setState(t)}function r(t){var o=this.constructor.getDerivedStateFromProps(t,this.state);null!==o&&void 0!==o&&this.setState(o)}function p(t,o){try{var e=this.props,n=this.state;this.props=t,this.state=o,this.__reactInternalSnapshot=this.getSnapshotBeforeUpdate(e,n)}finally{this.props=e,this.state=n}}n.__suppressDeprecationWarning=!0,r.__suppressDeprecationWarning=!0,p.__suppressDeprecationWarning=!0,t.exports=function(t){if(!t.prototype||!t.prototype.isReactComponent)throw new Error("Can only polyfill class components");if("function"==typeof t.getDerivedStateFromProps){if("function"==typeof t.prototype.componentWillMount)throw new Error("Cannot polyfill getDerivedStateFromProps() for components that define componentWillMount()");if("function"==typeof t.prototype.componentWillReceiveProps)throw new Error("Cannot polyfill getDerivedStateFromProps() for components that define componentWillReceiveProps()");t.prototype.componentWillMount=n,t.prototype.componentWillReceiveProps=r}if("function"==typeof t.prototype.getSnapshotBeforeUpdate){if("function"==typeof t.prototype.componentWillUpdate)throw new Error("Cannot polyfill getSnapshotBeforeUpdate() for components that define componentWillUpdate()");if("function"!=typeof t.prototype.componentDidUpdate)throw new Error("Cannot polyfill getSnapshotBeforeUpdate() for components that do not define componentDidUpdate() on the prototype");t.prototype.componentWillUpdate=p;var o=t.prototype.componentDidUpdate;t.prototype.componentDidUpdate=function(t,e){o.call(this,t,e,this.__reactInternalSnapshot)}}return t}}])});