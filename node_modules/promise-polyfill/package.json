{
  "_args": [
    [
      {
        "raw": "promise-polyfill@^7.1.0",
        "scope": null,
        "escapedName": "promise-polyfill",
        "name": "promise-polyfill",
        "rawSpec": "^7.1.0",
        "spec": ">=7.1.0 <8.0.0",
        "type": "range"
      },
      "/home/yugam/Desktop/Workspace/Alma-Mater/node_modules/@firebase/polyfill"
    ]
  ],
  "_from": "promise-polyfill@>=7.1.0 <8.0.0",
  "_id": "promise-polyfill@7.1.1",
  "_inCache": true,
  "_location": "/promise-polyfill",
  "_nodeVersion": "8.9.4",
  "_npmOperationalInternal": {
    "host": "s3://npm-registry-packages",
    "tmp": "tmp/promise-polyfill_7.1.1_1522068402399_0.6654279552489704"
  },
  "_npmUser": {
    "name": "taylorhakes",
    "email": "npm@taylorhakes.com"
  },
  "_npmVersion": "5.6.0",
  "_phantomChildren": {},
  "_requested": {
    "raw": "promise-polyfill@^7.1.0",
    "scope": null,
    "escapedName": "promise-polyfill",
    "name": "promise-polyfill",
    "rawSpec": "^7.1.0",
    "spec": ">=7.1.0 <8.0.0",
    "type": "range"
  },
  "_requiredBy": [
    "/@firebase/polyfill"
  ],
  "_resolved": "https://registry.npmjs.org/promise-polyfill/-/promise-polyfill-7.1.1.tgz",
  "_shasum": "3af26a57795f270c6f546f9a7497c7a204556729",
  "_shrinkwrap": null,
  "_spec": "promise-polyfill@^7.1.0",
  "_where": "/home/yugam/Desktop/Workspace/Alma-Mater/node_modules/@firebase/polyfill",
  "author": {
    "name": "Taylor Hakes"
  },
  "bugs": {
    "url": "https://github.com/taylorhakes/promise-polyfill/issues"
  },
  "dependencies": {},
  "description": "Lightweight promise polyfill. A+ compliant",
  "devDependencies": {
    "cross-env": "^5.1.1",
    "eslint": "^4.11.0",
    "husky": "^0.14.3",
    "karma": "^0.13.19",
    "karma-browserify": "^4.4.2",
    "karma-chrome-launcher": "^0.2.2",
    "karma-mocha": "^0.2.1",
    "lint-staged": "^5.0.0",
    "mocha": "^2.3.4",
    "npm-run-all": "^4.1.2",
    "prettier": "^1.8.2",
    "promises-aplus-tests": "*",
    "rimraf": "^2.6.2",
    "rollup": "^0.52.0",
    "rollup-plugin-uglify": "^2.0.1",
    "sinon": "^1.17.2"
  },
  "directories": {},
  "dist": {
    "integrity": "sha512-k1ArwERleWt59+JZuPp5Asd4+Eo3R6g4SDWKl8ozLYZE6K5pZULl1e4hlg112OYVgQcJ6IwBlBHP6JkCDUrayA==",
    "shasum": "3af26a57795f270c6f546f9a7497c7a204556729",
    "tarball": "https://registry.npmjs.org/promise-polyfill/-/promise-polyfill-7.1.1.tgz",
    "fileCount": 12,
    "unpackedSize": 46747
  },
  "files": [
    "src",
    "lib",
    "dist"
  ],
  "gitHead": "96b06f40229e8f0998e2f3519e5599ed429b52ed",
  "homepage": "https://github.com/taylorhakes/promise-polyfill",
  "jsnext:main": "src/index.js",
  "keywords": [
    "promise",
    "promise-polyfill",
    "ES6",
    "promises-aplus"
  ],
  "license": "MIT",
  "main": "lib/index.js",
  "maintainers": [
    {
      "name": "taylorhakes",
      "email": "npm@taylorhakes.com"
    }
  ],
  "name": "promise-polyfill",
  "optionalDependencies": {},
  "readme": "# Promise Polyfill\n\n[![travis][travis-image]][travis-url]\n\n[travis-image]: https://img.shields.io/travis/taylorhakes/promise-polyfill.svg?style=flat\n[travis-url]: https://travis-ci.org/taylorhakes/promise-polyfill\n\nLightweight ES6 Promise polyfill for the browser and node. Adheres closely to\nthe spec. It is a perfect polyfill IE, Firefox or any other browser that does\nnot support native promises.\n\nFor API information about Promises, please check out this article\n[HTML5Rocks article](http://www.html5rocks.com/en/tutorials/es6/promises/).\n\nIt is extremely lightweight. **_< 1kb Gzipped_**\n\n## Browser Support\n\nIE8+, Chrome, Firefox, IOS 4+, Safari 5+, Opera\n\n### NPM Use\n\n```\nnpm install promise-polyfill --save-exact\n```\n\n### Bower Use\n\n```\nbower install promise-polyfill\n```\n\n### CDN Polyfill Use\n\n```html\n<script href=\"https://cdn.jsdelivr.net/npm/promise-polyfill@7/dist/polyfill.min.js\"></script>\n```\n\n## Downloads\n\n* [Promise](https://raw.github.com/taylorhakes/promise-polyfill/master/dist/promise.js)\n* [Promise-min](https://raw.github.com/taylorhakes/promise-polyfill/master/dist/promise.min.js)\n\n## Simple use\n\n```js\nimport Promise from 'promise-polyfill';\n```\n\nthen you can use like normal Promises\n\n```js\nvar prom = new Promise(function(resolve, reject) {\n  // do a thing, possibly async, thenâ€¦\n\n  if (/* everything turned out fine */) {\n    resolve(\"Stuff worked!\");\n  }  else {\n    reject(new Error(\"It broke\"));\n  }\n});\n\nprom.then(function(result) {\n  // Do something when async done\n});\n```\n\nIf you would like to just polyfill, only if native doesn't exist.\n\n```js\nimport 'promise-polyfill/src/polyfill';\n```\n\n## Performance\n\nBy default promise-polyfill uses `setImmediate`, but falls back to `setTimeout`\nfor executing asynchronously. If a browser does not support `setImmediate`\n(IE/Edge are the only browsers with setImmediate), you may see performance\nissues. Use a `setImmediate` polyfill to fix this issue.\n[setAsap](https://github.com/taylorhakes/setAsap) or\n[setImmediate](https://github.com/YuzuJS/setImmediate) work well.\n\nIf you polyfill `window.setImmediate` or use `Promise._immediateFn = yourImmediateFn` it will be used instead of `window.setTimeout`\n\n```\nnpm install setasap --save\n```\n\n```js\nimport Promise from 'promise-polyfill/src/polyfill';\nimport setAsap from 'setasap';\nPromise._immediateFn = setAsap;\n```\n\n## Unhandled Rejections\n\npromise-polyfill will warn you about possibly unhandled rejections. It will show\na console warning if a Promise is rejected, but no `.catch` is used. You can\nchange this behavior by doing.\n\n```js\nPromise._unhandledRejectionFn = <your reject error handler>;\n```\n\nIf you would like to disable unhandled rejection messages. Use a noop like\nbelow.\n\n```js\nPromise._unhandledRejectionFn = function(rejectError) {};\n```\n\n## Testing\n\n```\nnpm install\nnpm test\n```\n\n## License\n\nMIT\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/taylorhakes/promise-polyfill.git"
  },
  "scripts": {
    "build": "run-p build:**",
    "build:cjs": "rollup -i src/index.js -o lib/index.js -f cjs",
    "build:cjs-polyfill": "rollup -i src/polyfill.js -o lib/polyfill.js -f cjs",
    "build:umd": "cross-env NODE_ENV=development rollup -i src/index.js -o dist/promise.js -c rollup.umd.config.js",
    "build:umd-polyfill": "cross-env NODE_ENV=development rollup -i src/polyfill.js -o dist/polyfill.js -c rollup.umd.config.js",
    "build:umd-polyfill:min": "cross-env NODE_ENV=production rollup -i src/polyfill.js -o dist/polyfill.min.js -c rollup.umd.config.js",
    "build:umd:min": "cross-env NODE_ENV=production rollup -i src/index.js -o dist/promise.min.js -c rollup.umd.config.js",
    "prebuild": "rimraf lib dist",
    "precommit": "lint-staged",
    "prepare": "npm run build",
    "prepublish": "test $(npm -v | tr . '\\n' | head -n 1) -ge '4' || exit 1",
    "pretest": "npm run build:cjs",
    "test": "eslint src && mocha && karma start --single-run"
  },
  "unpkg": "dist/promise.min.js",
  "version": "7.1.1"
}
