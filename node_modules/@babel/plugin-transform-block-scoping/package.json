{
  "_args": [
    [
      {
        "raw": "@babel/plugin-transform-block-scoping@^7.0.0-beta",
        "scope": "@babel",
        "escapedName": "@babel%2fplugin-transform-block-scoping",
        "name": "@babel/plugin-transform-block-scoping",
        "rawSpec": "^7.0.0-beta",
        "spec": ">=7.0.0-beta <8.0.0",
        "type": "range"
      },
      "/home/yugam/Desktop/Workspace/Alma-Mater/node_modules/metro"
    ]
  ],
  "_from": "@babel/plugin-transform-block-scoping@>=7.0.0-beta <8.0.0",
  "_id": "@babel/plugin-transform-block-scoping@7.0.0-beta.42",
  "_inCache": true,
  "_location": "/@babel/plugin-transform-block-scoping",
  "_nodeVersion": "8.10.0",
  "_npmOperationalInternal": {
    "host": "s3://npm-registry-packages",
    "tmp": "tmp/plugin-transform-block-scoping_7.0.0-beta.42_1521147039146_0.6136945166256653"
  },
  "_npmUser": {
    "name": "hzoo",
    "email": "hi@henryzoo.com"
  },
  "_npmVersion": "5.6.0",
  "_phantomChildren": {},
  "_requested": {
    "raw": "@babel/plugin-transform-block-scoping@^7.0.0-beta",
    "scope": "@babel",
    "escapedName": "@babel%2fplugin-transform-block-scoping",
    "name": "@babel/plugin-transform-block-scoping",
    "rawSpec": "^7.0.0-beta",
    "spec": ">=7.0.0-beta <8.0.0",
    "type": "range"
  },
  "_requiredBy": [
    "/metro"
  ],
  "_resolved": "https://registry.npmjs.org/@babel/plugin-transform-block-scoping/-/plugin-transform-block-scoping-7.0.0-beta.42.tgz",
  "_shasum": "272c5cc2b46613ebcd2e19491b19263c36d2c3f4",
  "_shrinkwrap": null,
  "_spec": "@babel/plugin-transform-block-scoping@^7.0.0-beta",
  "_where": "/home/yugam/Desktop/Workspace/Alma-Mater/node_modules/metro",
  "dependencies": {
    "@babel/helper-plugin-utils": "7.0.0-beta.42",
    "lodash": "^4.2.0"
  },
  "description": "Compile ES2015 block scoping (const and let) to ES5",
  "devDependencies": {
    "@babel/core": "7.0.0-beta.42",
    "@babel/helper-plugin-test-runner": "7.0.0-beta.42"
  },
  "directories": {},
  "dist": {
    "integrity": "sha512-qvlAR1L7gZ1gqdj81a2AEfuar3lFsr7FSad4JrN5CJinQlVn/1eJe8oB1DQ7U8ocAzDDjn3tGit9lN7uKBWZsQ==",
    "shasum": "272c5cc2b46613ebcd2e19491b19263c36d2c3f4",
    "tarball": "https://registry.npmjs.org/@babel/plugin-transform-block-scoping/-/plugin-transform-block-scoping-7.0.0-beta.42.tgz",
    "fileCount": 4,
    "unpackedSize": 27027
  },
  "keywords": [
    "babel-plugin"
  ],
  "license": "MIT",
  "main": "lib/index.js",
  "maintainers": [
    {
      "name": "andarist",
      "email": "mateuszburzynski@gmail.com"
    },
    {
      "name": "danez",
      "email": "daniel@tschinder.de"
    },
    {
      "name": "existentialism",
      "email": "bng412@gmail.com"
    },
    {
      "name": "hzoo",
      "email": "hi@henryzoo.com"
    },
    {
      "name": "loganfsmyth",
      "email": "loganfsmyth@gmail.com"
    },
    {
      "name": "xtuc",
      "email": "contact@xtuc.fr"
    }
  ],
  "name": "@babel/plugin-transform-block-scoping",
  "optionalDependencies": {},
  "peerDependencies": {
    "@babel/core": "7.0.0-beta.42"
  },
  "readme": "# @babel/plugin-transform-block-scoping\n\n> Compile ES2015 block scoping (const and let) to ES5\n\n## Examples\n\n**In**\n\n```javascript\n{\n  let a = 3\n}\n\nlet a = 3\n```\n\n**Out**\n\n```javascript\n{\n  var _a = 3;\n}\n\nvar a = 3;\n```\n\n## Constant checks\n\nThis plugin also validates all `const` variables.\nReassignment of constants is a runtime error and it will insert the necessary error code for those.\n\n## Installation\n\n```sh\nnpm install --save-dev @babel/plugin-transform-block-scoping\n```\n\n## Usage\n\n### Via `.babelrc` (Recommended)\n\n**.babelrc**\n\nWithout options:\n\n```json\n{\n  \"plugins\": [\"@babel/plugin-transform-block-scoping\"]\n}\n```\n\nWith options:\n\n```json\n{\n  \"plugins\": [\n    [\"@babel/plugin-transform-block-scoping\", {\n      \"throwIfClosureRequired\": true\n    }]\n  ]\n}\n```\n\n### Via CLI\n\n```sh\nbabel --plugins @babel/plugin-transform-block-scoping script.js\n```\n\n### Via Node API\n\n```javascript\nrequire(\"@babel/core\").transform(\"code\", {\n  plugins: [\"@babel/plugin-transform-block-scoping\"]\n});\n```\n\n## Options\n\n### `throwIfClosureRequired`\n`boolean`, defaults to `false`.\n\nIn cases such as the following it's impossible to rewrite let/const without adding an additional function and closure while transforming:\n\n```javascript\nfor (let i = 0; i < 5; i++) {\n  setTimeout(() => console.log(i), 1);\n}\n```\n\nIn extremely performance-sensitive code, this can be undesirable. If `\"throwIfClosureRequired\": true` is set, Babel throws when transforming these patterns instead of automatically adding an additional function.\n\n### `tdz`\n`boolean`, defaults to `false`.\n\nBy default this plugin will ignore the *temporal dead zone (TDZ)* for block-scoped variables. The following code will **not throw an error when transpiled with Babel, which is not spec compliant**:\n\n```javascript\ni\nlet i;\n```\n\nIf you need these errors you can tell Babel to try and find them by setting `\"tdz\": true` for this plugin. However, the current implementation might not get all edge cases right and its best to just avoid code like this in the first place.\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "https://github.com/babel/babel/tree/master/packages/babel-plugin-transform-block-scoping"
  },
  "version": "7.0.0-beta.42"
}
