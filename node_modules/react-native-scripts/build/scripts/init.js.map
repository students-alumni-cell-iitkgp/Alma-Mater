{"version":3,"sources":["init.js"],"names":["DEFAULT_DEPENDENCIES","expo","react","WEB_DEFAULT_DEPENDENCIES","webpack","DEFAULT_DEV_DEPENDENCIES","WEB_DEFAULT_DEV_DEPENDENCIES","arg","process","argv","slice","boolean","module","exports","appPath","appName","verbose","cwd","ownPackageName","require","name","ownPath","join","useYarn","npmOrYarn","npmVersion","sync","stdout","toString","trim","match","console","log","yellow","exit","readmeExists","rename","appPackagePath","JSON","readFile","appPackage","parse","main","scripts","start","eject","android","ios","test","withWebSupport","web","build","jest","preset","dependencies","devDependencies","writeFile","copy","code","data","appendFile","unlink","command","args","error","cdpath","resolve","cyan","webLogMessage"],"mappings":"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","file":"init.js","sourcesContent":["// @flow\n\nimport chalk from 'chalk';\nimport fse from 'fs-extra';\nimport path from 'path';\nimport pathExists from 'path-exists';\nimport spawn from 'cross-spawn';\nimport minimist from 'minimist';\nimport log from '../util/log';\nimport install from '../util/install';\nimport { hasYarn } from '../util/pm';\n\n// UPDATE DEPENDENCY VERSIONS HERE\nconst DEFAULT_DEPENDENCIES = {\n  expo: '^25.0.0',\n  react: '16.2.0',\n  'react-native': '0.52.0',\n};\n\nconst WEB_DEFAULT_DEPENDENCIES = {\n  'expo-web': '^0.0.12',\n  'react-dom': '16.0.0',\n  'react-native-web': '^0.4.0',\n  webpack: '^3.11.0',\n  'webpack-dev-server': '2.9.4',\n};\n\n// TODO figure out how this interacts with ejection\nconst DEFAULT_DEV_DEPENDENCIES = {\n  'jest-expo': '25.0.0',\n  'react-test-renderer': '16.2.0',\n};\n\nconst WEB_DEFAULT_DEV_DEPENDENCIES = {\n  'react-native-scripts': 'next',\n  'babel-loader': '^7.1.2',\n  'babel-plugin-expo-web': '^0.0.5',\n  'babel-plugin-react-native-web': '^0.4.0',\n  'babel-plugin-transform-decorators-legacy': '^1.3.4',\n  'babel-plugin-transform-imports': '^1.4.1',\n  'babel-plugin-transform-runtime': '^6.23.0',\n  'file-loader': '^1.1.7',\n  'css-loader': '^0.28.7',\n  'style-loader': '^0.19.0',\n};\n\nconst arg = minimist(process.argv.slice(2), {\n  boolean: ['with-web-support'],\n});\n\nmodule.exports = async (appPath: string, appName: string, verbose: boolean, cwd: string = '') => {\n  const ownPackageName: string = require('../../package.json').name;\n  const ownPath: string = path.join(appPath, 'node_modules', ownPackageName);\n  const useYarn: boolean = hasYarn(appPath);\n  const npmOrYarn = useYarn ? 'yarn' : 'npm';\n\n  // FIXME(perry) remove when npm 5 is supported\n  if (!useYarn) {\n    let npmVersion = spawn.sync('npm', ['--version']).stdout.toString().trim();\n\n    if (npmVersion.match(/\\d+/)[0] === '5') {\n      console.log(\n        chalk.yellow(\n          `\n*******************************************************************************\nERROR: npm 5 is not supported yet\n*******************************************************************************\n\nIt looks like you're using npm 5 which was recently released.\n\nCreate React Native App doesn't work with npm 5 yet, unfortunately. We\nrecommend using npm 4 or yarn until some bugs are resolved.\n\nYou can follow the known issues with npm 5 at:\nhttps://github.com/npm/npm/issues/16991\n\n*******************************************************************************\n `\n        )\n      );\n      process.exit(1);\n    }\n  }\n\n  const readmeExists: boolean = await pathExists(path.join(appPath, 'README.md'));\n  if (readmeExists) {\n    await fse.rename(path.join(appPath, 'README.md'), path.join(appPath, 'README.old.md'));\n  }\n\n  const appPackagePath: string = path.join(appPath, 'package.json');\n  const appPackage = JSON.parse(await fse.readFile(appPackagePath));\n\n  // mutate the default package.json in any ways we need to\n  appPackage.main = './node_modules/react-native-scripts/build/bin/crna-entry.js';\n  appPackage.scripts = {\n    start: 'react-native-scripts start',\n    eject: 'react-native-scripts eject',\n    android: 'react-native-scripts android',\n    ios: 'react-native-scripts ios',\n    test: 'jest',\n  };\n\n  const withWebSupport = arg['with-web-support'];\n  if (withWebSupport) {\n    appPackage.main = './node_modules/react-native-scripts/build/bin/crna-entry-web.js';\n    Object.assign(appPackage.scripts, {\n      web: 'webpack-dev-server -d --config ./webpack.config.js  --inline --hot --colors --content-base public/ --history-api-fallback',\n      build: 'NODE_ENV=production webpack -p --config ./webpack.config.js',\n    });\n  }\n\n  appPackage.jest = {\n    preset: 'jest-expo',\n  };\n\n  if (!appPackage.dependencies) {\n    appPackage.dependencies = {};\n  }\n\n  if (!appPackage.devDependencies) {\n    appPackage.devDependencies = {};\n  }\n\n  // react-native-scripts is already in the package.json devDependencies\n  // so we need to merge instead of assigning\n  Object.assign(appPackage.dependencies, DEFAULT_DEPENDENCIES);\n  Object.assign(appPackage.devDependencies, DEFAULT_DEV_DEPENDENCIES);\n\n  if (withWebSupport) {\n    Object.assign(appPackage.dependencies, WEB_DEFAULT_DEPENDENCIES);\n    Object.assign(appPackage.devDependencies, WEB_DEFAULT_DEV_DEPENDENCIES);\n  }\n\n  // Write the new appPackage after copying so that we can include any existing\n  await fse.writeFile(appPackagePath, JSON.stringify(appPackage, null, 2));\n\n  // Copy the files for the user\n  await fse.copy(\n    path.join(ownPath, arg['with-web-support'] ? 'template-with-web' : 'template'),\n    appPath\n  );\n\n  // Rename gitignore after the fact to prevent npm from renaming it to .npmignore\n  try {\n    await fse.rename(path.join(appPath, 'gitignore'), path.join(appPath, '.gitignore'));\n  } catch (err) {\n    // Append if there's already a `.gitignore` file there\n    if (err.code === 'EEXIST') {\n      const data = await fse.readFile(path.join(appPath, 'gitignore'));\n      await fse.appendFile(path.join(appPath, '.gitignore'), data);\n      await fse.unlink(path.join(appPath, 'gitignore'));\n    } else {\n      throw err;\n    }\n  }\n  const { code, command, args } = await install(appPath);\n  if (code !== 0) {\n    console.error('Failed to install');\n    // console.error(`\\`${command} ${args.join(' ')}\\` failed`);\n    return;\n  }\n\n  // display the cleanest way to get to the app dir\n  // if the cwd + appName is equal to the full path, then just cd into appName\n  let cdpath;\n  if (path.resolve(cwd, appName) === appPath) {\n    cdpath = appName;\n  } else {\n    cdpath = appPath;\n  }\n\n  log(\n    `\nSuccess! Created ${appName} at ${appPath}\nInside that directory, you can run several commands:\n\n  ${chalk.cyan(npmOrYarn + ' start')}\n    Starts the development server so you can open your app in the Expo\n    app on your phone.\n\n  ${chalk.cyan(npmOrYarn + ' run ios')}\n    (Mac only, requires Xcode)\n    Starts the development server and loads your app in an iOS simulator.\n\n  ${chalk.cyan(npmOrYarn + ' run android')}\n    (Requires Android build tools)\n    Starts the development server and loads your app on a connected Android\n    device or emulator.\n  ${withWebSupport ? webLogMessage(npmOrYarn) : '\\n'}\n  ${chalk.cyan(npmOrYarn + ' test')}\n    Starts the test runner.\n\n  ${chalk.cyan(npmOrYarn + ' run eject')}\n    Removes this tool and copies build dependencies, configuration files\n    and scripts into the app directory. If you do this, you can’t go back!\n\n\nWe suggest that you begin by typing:\n\n  ${chalk.cyan('cd ' + cdpath)}\n  ${chalk.cyan(npmOrYarn + ' start')}`\n  );\n\n  if (readmeExists) {\n    log(\n      `\n${chalk.yellow('You had a `README.md` file, we renamed it to `README.old.md`')}`\n    );\n  }\n\n  log();\n  log('Happy hacking!');\n};\n\nfunction webLogMessage(npmOrYarn) {\n  return `\n  ${chalk.cyan(npmOrYarn + ' web')}\n    Starts the Webpack server to serve the web version of the app.\n  `;\n}\n"]}