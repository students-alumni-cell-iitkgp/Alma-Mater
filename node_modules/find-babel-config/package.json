{
  "_args": [
    [
      {
        "raw": "find-babel-config@^1.0.1",
        "scope": null,
        "escapedName": "find-babel-config",
        "name": "find-babel-config",
        "rawSpec": "^1.0.1",
        "spec": ">=1.0.1 <2.0.0",
        "type": "range"
      },
      "/home/yugam/Desktop/Workspace/Alma-Mater/node_modules/babel-plugin-module-resolver"
    ]
  ],
  "_from": "find-babel-config@>=1.0.1 <2.0.0",
  "_id": "find-babel-config@1.1.0",
  "_inCache": true,
  "_location": "/find-babel-config",
  "_nodeVersion": "7.10.0",
  "_npmOperationalInternal": {
    "host": "packages-18-east.internal.npmjs.com",
    "tmp": "tmp/find-babel-config-1.1.0.tgz_1494281602387_0.8741057445295155"
  },
  "_npmUser": {
    "name": "tleunen",
    "email": "tommy.leunen@gmail.com"
  },
  "_npmVersion": "4.6.1",
  "_phantomChildren": {},
  "_requested": {
    "raw": "find-babel-config@^1.0.1",
    "scope": null,
    "escapedName": "find-babel-config",
    "name": "find-babel-config",
    "rawSpec": "^1.0.1",
    "spec": ">=1.0.1 <2.0.0",
    "type": "range"
  },
  "_requiredBy": [
    "/babel-plugin-module-resolver"
  ],
  "_resolved": "https://registry.npmjs.org/find-babel-config/-/find-babel-config-1.1.0.tgz",
  "_shasum": "acc01043a6749fec34429be6b64f542ebb5d6355",
  "_shrinkwrap": null,
  "_spec": "find-babel-config@^1.0.1",
  "_where": "/home/yugam/Desktop/Workspace/Alma-Mater/node_modules/babel-plugin-module-resolver",
  "author": {
    "name": "Tommy Leunen",
    "email": "tommy.leunen@gmail.com",
    "url": "http://tommyleunen.com"
  },
  "bugs": {
    "url": "https://github.com/tleunen/find-babel-config/issues"
  },
  "dependencies": {
    "json5": "^0.5.1",
    "path-exists": "^3.0.0"
  },
  "description": "Find the closest babel config based on a directory",
  "devDependencies": {
    "babel-cli": "^6.24.1",
    "babel-jest": "^20.0.0",
    "babel-preset-env": "^1.4.0",
    "eslint": "^3.19.0",
    "eslint-config-airbnb-base": "^11.1.3",
    "eslint-plugin-import": "^2.2.0",
    "jest": "^20.0.0",
    "standard-version": "^4.0.0"
  },
  "directories": {},
  "dist": {
    "shasum": "acc01043a6749fec34429be6b64f542ebb5d6355",
    "tarball": "https://registry.npmjs.org/find-babel-config/-/find-babel-config-1.1.0.tgz"
  },
  "engines": {
    "node": ">=4.0.0"
  },
  "gitHead": "2be9668f7157227a9b65dbfb0497bf3cb30f3955",
  "greenkeeper": {
    "ignore": [
      "eslint",
      "eslint-plugin-import",
      "babel-jest"
    ]
  },
  "homepage": "https://github.com/tleunen/find-babel-config#readme",
  "jest": {
    "testRegex": "/test/.*\\.test\\.js$",
    "collectCoverageFrom": [
      "src/**/*.js"
    ]
  },
  "keywords": [
    "babel",
    "config",
    "loader",
    "finder",
    "babelrc"
  ],
  "license": "MIT",
  "main": "lib/index.js",
  "maintainers": [
    {
      "name": "tleunen",
      "email": "tommy.leunen@gmail.com"
    }
  ],
  "name": "find-babel-config",
  "optionalDependencies": {},
  "readme": "# find-babel-config\n[![npm][npm-version-image]][npm-url] [![Build Status][ci-image]][ci-url] [![Coverage Status][coverage-image]][coverage-url]\n\nHelper function to retrieve the closest Babel configuration from a specific directory.\n\n## Installation\n\n```sh\nnpm install --save find-babel-config\n```\n\n## Usage\n\n### Async\n\n```js\n// directory can be an absolute or relative path\n// If it's a relative path, it is relative to the current working directory (process.cwd())\nconst directory = 'src';\nfindBabelConfig(directory).then(({ file, config }) => {\n    if (file) {\n        // file is the file in which the config is found\n        console.log(file);\n        // config is a JS plain object with the babel config\n        console.log(config);\n    }\n});\n```\n\n### Sync\n\n```js\n// directory can be an absolute or relative path\n// If it's a relative path, it is relative to the current working directory (process.cwd())\nconst directory = 'src';\nconst { file, config } = findBabelConfig.sync(directory);\n// if c === null, the config wasn't found\nif (file) {\n    // file is the file in which the config is found\n    console.log(file);\n    // config is a JS plain object with the babel config\n    console.log(config);\n}\n```\n\nA second parameter can be given to `findBabelConfig`, it specifies the `depth` of search. By default, this value is `Infinity` but you can set the value you want: `findBabelConfig('src', 10)`.\n\n## License\n\nMIT, see [LICENSE.md](/LICENSE.md) for details.\n\n[ci-image]: https://circleci.com/gh/tleunen/find-babel-config.svg?style=shield\n[ci-url]: https://circleci.com/gh/tleunen/find-babel-config\n[coverage-image]: https://codecov.io/gh/tleunen/find-babel-config/branch/master/graph/badge.svg\n[coverage-url]: https://codecov.io/gh/tleunen/find-babel-config\n[npm-version-image]: https://img.shields.io/npm/v/find-babel-config.svg\n[npm-url]: https://www.npmjs.com/package/find-babel-config\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/tleunen/find-babel-config.git"
  },
  "scripts": {
    "compile": "babel src --out-dir lib",
    "lint": "eslint src test",
    "prepublish": "npm run compile",
    "pretest": "npm run lint",
    "release": "standard-version",
    "test": "jest --coverage",
    "test:suite": "jest",
    "test:watch": "jest --watch"
  },
  "version": "1.1.0"
}
